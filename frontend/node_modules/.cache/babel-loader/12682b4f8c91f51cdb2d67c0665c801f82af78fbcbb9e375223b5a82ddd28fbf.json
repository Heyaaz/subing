{"ast":null,"code":"import api from './api';\nexport const subscriptionService = {\n  // 구독 목록 조회\n  async getSubscriptions(userId) {\n    try {\n      const response = await api.get(`/subscriptions?userId=${userId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error;\n    }\n  },\n  // 구독 상세 조회\n  async getSubscription(id) {\n    try {\n      const response = await api.get(`/subscriptions/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n    }\n  },\n  // 구독 추가\n  async createSubscription(subscriptionData) {\n    try {\n      const response = await api.post('/subscriptions', subscriptionData);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error;\n    }\n  },\n  // 구독 수정\n  async updateSubscription(id, subscriptionData) {\n    try {\n      const response = await api.put(`/subscriptions/${id}`, subscriptionData);\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error;\n    }\n  },\n  // 구독 삭제\n  async deleteSubscription(id) {\n    try {\n      const response = await api.delete(`/subscriptions/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error;\n    }\n  },\n  // 구독 활성화/비활성화\n  async toggleSubscriptionStatus(id, isActive) {\n    try {\n      const response = await api.patch(`/subscriptions/${id}/status`, {\n        isActive\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error;\n    }\n  }\n};","map":{"version":3,"names":["api","subscriptionService","getSubscriptions","userId","response","get","data","error","_error$response","getSubscription","id","_error$response2","createSubscription","subscriptionData","post","_error$response3","updateSubscription","put","_error$response4","deleteSubscription","delete","_error$response5","toggleSubscriptionStatus","isActive","patch","_error$response6"],"sources":["/Volumes/PortableSSD/Study/subing/subing/frontend/src/services/subscriptionService.js"],"sourcesContent":["import api from './api';\n\nexport const subscriptionService = {\n  // 구독 목록 조회\n  async getSubscriptions(userId) {\n    try {\n      const response = await api.get(`/subscriptions?userId=${userId}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error;\n    }\n  },\n\n  // 구독 상세 조회\n  async getSubscription(id) {\n    try {\n      const response = await api.get(`/subscriptions/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error;\n    }\n  },\n\n  // 구독 추가\n  async createSubscription(subscriptionData) {\n    try {\n      const response = await api.post('/subscriptions', subscriptionData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error;\n    }\n  },\n\n  // 구독 수정\n  async updateSubscription(id, subscriptionData) {\n    try {\n      const response = await api.put(`/subscriptions/${id}`, subscriptionData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error;\n    }\n  },\n\n  // 구독 삭제\n  async deleteSubscription(id) {\n    try {\n      const response = await api.delete(`/subscriptions/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error;\n    }\n  },\n\n  // 구독 활성화/비활성화\n  async toggleSubscriptionStatus(id, isActive) {\n    try {\n      const response = await api.patch(`/subscriptions/${id}/status`, { isActive });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error;\n    }\n  }\n};\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,mBAAmB,GAAG;EACjC;EACA,MAAMC,gBAAgBA,CAACC,MAAM,EAAE;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,yBAAyBF,MAAM,EAAE,CAAC;MACjE,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK;IACrC;EACF,CAAC;EAED;EACA,MAAME,eAAeA,CAACC,EAAE,EAAE;IACxB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,kBAAkBK,EAAE,EAAE,CAAC;MACtD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAI,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAJ,KAAK,CAACH,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBL,IAAI,KAAIC,KAAK;IACrC;EACF,CAAC;EAED;EACA,MAAMK,kBAAkBA,CAACC,gBAAgB,EAAE;IACzC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACc,IAAI,CAAC,gBAAgB,EAAED,gBAAgB,CAAC;MACnE,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAQ,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAR,KAAK,CAACH,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI,KAAIC,KAAK;IACrC;EACF,CAAC;EAED;EACA,MAAMS,kBAAkBA,CAACN,EAAE,EAAEG,gBAAgB,EAAE;IAC7C,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACiB,GAAG,CAAC,kBAAkBP,EAAE,EAAE,EAAEG,gBAAgB,CAAC;MACxE,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAW,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAX,KAAK,CAACH,QAAQ,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBZ,IAAI,KAAIC,KAAK;IACrC;EACF,CAAC;EAED;EACA,MAAMY,kBAAkBA,CAACT,EAAE,EAAE;IAC3B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACoB,MAAM,CAAC,kBAAkBV,EAAE,EAAE,CAAC;MACzD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAc,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAd,KAAK,CAACH,QAAQ,cAAAiB,gBAAA,uBAAdA,gBAAA,CAAgBf,IAAI,KAAIC,KAAK;IACrC;EACF,CAAC;EAED;EACA,MAAMe,wBAAwBA,CAACZ,EAAE,EAAEa,QAAQ,EAAE;IAC3C,IAAI;MACF,MAAMnB,QAAQ,GAAG,MAAMJ,GAAG,CAACwB,KAAK,CAAC,kBAAkBd,EAAE,SAAS,EAAE;QAAEa;MAAS,CAAC,CAAC;MAC7E,OAAOnB,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAkB,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAlB,KAAK,CAACH,QAAQ,cAAAqB,gBAAA,uBAAdA,gBAAA,CAAgBnB,IAAI,KAAIC,KAAK;IACrC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}