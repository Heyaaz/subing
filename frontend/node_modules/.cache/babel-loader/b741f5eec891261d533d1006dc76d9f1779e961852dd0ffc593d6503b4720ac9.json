{"ast":null,"code":"import api from './api';\nexport const statisticsService = {\n  // 월별 지출 통계 조회\n  async getMonthlyExpense(userId, year, month) {\n    try {\n      const response = await api.get(`/statistics/monthly/${userId}?year=${year}&month=${month}`);\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error;\n    }\n  },\n  // 지출 분석 조회\n  async getExpenseAnalysis(userId) {\n    try {\n      const response = await api.get(`/statistics/analysis/${userId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n    }\n  },\n  // 카테고리별 지출 통계\n  async getCategoryExpenses(userId, year, month) {\n    try {\n      var _monthlyData$data;\n      const monthlyData = await this.getMonthlyExpense(userId, year, month);\n      return ((_monthlyData$data = monthlyData.data) === null || _monthlyData$data === void 0 ? void 0 : _monthlyData$data.categoryExpenses) || [];\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error;\n    }\n  },\n  // 연간 지출 트렌드\n  async getYearlyTrend(userId, year) {\n    try {\n      const monthlyData = [];\n      for (let month = 1; month <= 12; month++) {\n        var _data$data, _data$data2;\n        const data = await this.getMonthlyExpense(userId, year, month);\n        monthlyData.push({\n          month,\n          totalAmount: ((_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.totalAmount) || 0,\n          activeSubscriptions: ((_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.activeSubscriptions) || 0\n        });\n      }\n      return monthlyData;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error;\n    }\n  }\n};","map":{"version":3,"names":["api","statisticsService","getMonthlyExpense","userId","year","month","response","get","data","error","_error$response","getExpenseAnalysis","_error$response2","getCategoryExpenses","_monthlyData$data","monthlyData","categoryExpenses","_error$response3","getYearlyTrend","_data$data","_data$data2","push","totalAmount","activeSubscriptions","_error$response4"],"sources":["/Volumes/PortableSSD/Study/subing/subing/frontend/src/services/statisticsService.js"],"sourcesContent":["import api from './api';\n\nexport const statisticsService = {\n  // 월별 지출 통계 조회\n  async getMonthlyExpense(userId, year, month) {\n    try {\n      const response = await api.get(`/statistics/monthly/${userId}?year=${year}&month=${month}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error;\n    }\n  },\n\n  // 지출 분석 조회\n  async getExpenseAnalysis(userId) {\n    try {\n      const response = await api.get(`/statistics/analysis/${userId}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error;\n    }\n  },\n\n  // 카테고리별 지출 통계\n  async getCategoryExpenses(userId, year, month) {\n    try {\n      const monthlyData = await this.getMonthlyExpense(userId, year, month);\n      return monthlyData.data?.categoryExpenses || [];\n    } catch (error) {\n      throw error.response?.data || error;\n    }\n  },\n\n  // 연간 지출 트렌드\n  async getYearlyTrend(userId, year) {\n    try {\n      const monthlyData = [];\n      for (let month = 1; month <= 12; month++) {\n        const data = await this.getMonthlyExpense(userId, year, month);\n        monthlyData.push({\n          month,\n          totalAmount: data.data?.totalAmount || 0,\n          activeSubscriptions: data.data?.activeSubscriptions || 0\n        });\n      }\n      return monthlyData;\n    } catch (error) {\n      throw error.response?.data || error;\n    }\n  }\n};\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,iBAAiB,GAAG;EAC/B;EACA,MAAMC,iBAAiBA,CAACC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,uBAAuBJ,MAAM,SAASC,IAAI,UAAUC,KAAK,EAAE,CAAC;MAC3F,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK;IACrC;EACF,CAAC;EAED;EACA,MAAME,kBAAkBA,CAACR,MAAM,EAAE;IAC/B,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,wBAAwBJ,MAAM,EAAE,CAAC;MAChE,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAG,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAH,KAAK,CAACH,QAAQ,cAAAM,gBAAA,uBAAdA,gBAAA,CAAgBJ,IAAI,KAAIC,KAAK;IACrC;EACF,CAAC;EAED;EACA,MAAMI,mBAAmBA,CAACV,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC7C,IAAI;MAAA,IAAAS,iBAAA;MACF,MAAMC,WAAW,GAAG,MAAM,IAAI,CAACb,iBAAiB,CAACC,MAAM,EAAEC,IAAI,EAAEC,KAAK,CAAC;MACrE,OAAO,EAAAS,iBAAA,GAAAC,WAAW,CAACP,IAAI,cAAAM,iBAAA,uBAAhBA,iBAAA,CAAkBE,gBAAgB,KAAI,EAAE;IACjD,CAAC,CAAC,OAAOP,KAAK,EAAE;MAAA,IAAAQ,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAR,KAAK,CAACH,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI,KAAIC,KAAK;IACrC;EACF,CAAC;EAED;EACA,MAAMS,cAAcA,CAACf,MAAM,EAAEC,IAAI,EAAE;IACjC,IAAI;MACF,MAAMW,WAAW,GAAG,EAAE;MACtB,KAAK,IAAIV,KAAK,GAAG,CAAC,EAAEA,KAAK,IAAI,EAAE,EAAEA,KAAK,EAAE,EAAE;QAAA,IAAAc,UAAA,EAAAC,WAAA;QACxC,MAAMZ,IAAI,GAAG,MAAM,IAAI,CAACN,iBAAiB,CAACC,MAAM,EAAEC,IAAI,EAAEC,KAAK,CAAC;QAC9DU,WAAW,CAACM,IAAI,CAAC;UACfhB,KAAK;UACLiB,WAAW,EAAE,EAAAH,UAAA,GAAAX,IAAI,CAACA,IAAI,cAAAW,UAAA,uBAATA,UAAA,CAAWG,WAAW,KAAI,CAAC;UACxCC,mBAAmB,EAAE,EAAAH,WAAA,GAAAZ,IAAI,CAACA,IAAI,cAAAY,WAAA,uBAATA,WAAA,CAAWG,mBAAmB,KAAI;QACzD,CAAC,CAAC;MACJ;MACA,OAAOR,WAAW;IACpB,CAAC,CAAC,OAAON,KAAK,EAAE;MAAA,IAAAe,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAf,KAAK,CAACH,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBhB,IAAI,KAAIC,KAAK;IACrC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}